<Workspace Version="1.3.3.4651" X="-249.73294435854" Y="317.734739962124" zoom="3.61572129874955" ScaleFactor="1" Name="RIE.SetRevisionVisibility" Description="Sets Revision Visibility based on input string. Cloud and Tag, Tag or None." ID="da2e251e-5d77-4af1-af12-495f38fbb192" Category="RIE.Revisions">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="d2856651-5353-402e-87e4-8bc8ba481c63" type="PythonNodeModels.PythonNode" nickname="Python Script [RevVis]" x="250" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>import sys
#pyt_path = r"C:\Program Files (x86)\IronPython 2.7\DLLs"
#sys.path.append(pyt_path)
import clr

#clr.AddReference('IronPython.SQLite.dll')
pyt_path = r"C:\Program Files (x86)\IronPython 2.7\Lib"
sys.path.append(pyt_path)
#import sqlite3

# Import ToDSType(bool) extension method
clr.AddReference('RevitNodes')
import Revit
clr.ImportExtensions(Revit.GeometryConversion)
clr.ImportExtensions(Revit.Elements)

# Import DocumentManager and TransactionManager
clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

doc = DocumentManager.Instance.CurrentDBDocument
uidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument
app = DocumentManager.Instance.CurrentUIApplication.Application

# Import List ( ICollection(ElementId) = List[ElementId]() )
clr.AddReference('System')
from System.Collections.Generic import List

# Import Revit API + APIUI
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
from Autodesk.Revit.DB.Electrical import *

clr.AddReference('RevitAPIUI')
from Autodesk.Revit.UI import *

OUT = []

def tolist(obj):
	if isinstance(obj, list):
		return UnwrapElement(obj)
	else:
		return [UnwrapElement(obj)]

def setvalue(rev,revVis):
	if revVis == "None" or revVis == "Hidden":
		rev.Visibility = RevisionVisibility.Hidden
	elif revVis == "Cloud and Tag" or revVis == "CloudAndTagVisible":
		rev.Visibility = RevisionVisibility.CloudAndTagVisible
	elif revVis == "Tag"  or revVis == "TagVisible":
		rev.Visibility = RevisionVisibility.TagVisible
	else:
		try:
			rev.Visibility = RevisionVisibility.revVis
		except:
			return "Input value not valid. Try None, Cloud and Tag, Tag, Hidden, CloudAndTagVisible or TagVisible as input value(s)."
	return revVis

TransactionManager.Instance.EnsureInTransaction(doc)

if isinstance(IN[1], list):
	if len(IN[1]) == len(IN[0]):
		for i,j in zip(tolist(IN[0]),tolist(IN[1])):
			OUT.append(setvalue(i,j))
	else:
		for i in tolist(IN[0]):
			OUT.append(setvalue(i,IN[1][0]))
else:
	for i in tolist(IN[0]):
		OUT.append(setvalue(i,IN[1]))
	
TransactionManager.Instance.TransactionTaskDone()
</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="0414613a-2157-4930-b731-fc478792f65d" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="138.086607030082" y="-0.972440894578028" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Revision" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="86775f80-c458-4075-a809-5b41d12403a9" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="64.6673194894401" y="53.2421309894844" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Visibility:string" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="7dad1518-62e1-4454-838a-1a89d18d8ffe" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="398.094492012068" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Visibility" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="d2856651-5353-402e-87e4-8bc8ba481c63" start_index="0" end="7dad1518-62e1-4454-838a-1a89d18d8ffe" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0414613a-2157-4930-b731-fc478792f65d" start_index="0" end="d2856651-5353-402e-87e4-8bc8ba481c63" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="86775f80-c458-4075-a809-5b41d12403a9" start_index="0" end="d2856651-5353-402e-87e4-8bc8ba481c63" end_index="1" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>