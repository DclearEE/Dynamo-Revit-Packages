<Workspace Version="1.3.3.4651" X="252.822175080994" Y="285.468225803077" zoom="1.545620359375" ScaleFactor="1" Name="RIE.SetRevisionIssuedTo" Description="Sets IssuedTo parameter for input Revison" ID="78e32bb0-979a-4866-a4a7-6748aaad4f9c" Category="RIE.Revisions">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="e75f1e9f-c1e8-4996-be7e-2b795fc1e7be" type="PythonNodeModels.PythonNode" nickname="Python Script [IssuedTo]" x="250" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>import sys
#pyt_path = r"C:\Program Files (x86)\IronPython 2.7\DLLs"
#sys.path.append(pyt_path)
import clr

#clr.AddReference('IronPython.SQLite.dll')
pyt_path = r"C:\Program Files (x86)\IronPython 2.7\Lib"
sys.path.append(pyt_path)
#import sqlite3

# Import ToDSType(bool) extension method
clr.AddReference('RevitNodes')
import Revit
clr.ImportExtensions(Revit.GeometryConversion)
clr.ImportExtensions(Revit.Elements)

# Import DocumentManager and TransactionManager
clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

doc = DocumentManager.Instance.CurrentDBDocument
uidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument
app = DocumentManager.Instance.CurrentUIApplication.Application

# Import List ( ICollection(ElementId) = List[ElementId]() )
clr.AddReference('System')
from System.Collections.Generic import List

# Import Revit API + APIUI
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
from Autodesk.Revit.DB.Electrical import *

clr.AddReference('RevitAPIUI')
from Autodesk.Revit.UI import *

OUT = []

def tolist(obj):
	if isinstance(obj, list):
		return UnwrapElement(obj)
	else:
		return [UnwrapElement(obj)]

def setvalue(rev,issuedto):
	rev.IssuedTo = issuedto
	return issuedto

TransactionManager.Instance.EnsureInTransaction(doc)

if isinstance(IN[1], list):
	if len(IN[1]) == len(IN[0]):
		for i,j in zip(tolist(IN[0]),tolist(IN[1])):
			OUT.append(setvalue(i,j))
	else:
		for i in tolist(IN[0]):
			OUT.append(setvalue(i,IN[1][0]))
else:
	for i in tolist(IN[0]):
		OUT.append(setvalue(i,IN[1]))
	
TransactionManager.Instance.TransactionTaskDone()
</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="5d3ff10c-6620-425c-ade9-7e76410d4078" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="146.866595424372" y="0.646989407155814" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Revision" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="a26191bb-ee1b-4593-9d63-114e3158bc33" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="89.2845381875036" y="53.5985783337825" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="IssuedTo:string" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="7718a2db-e331-442c-80bf-dcdc9a5d8563" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="416.478154620015" y="-0.646989407155814" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="IssuedTo" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="e75f1e9f-c1e8-4996-be7e-2b795fc1e7be" start_index="0" end="7718a2db-e331-442c-80bf-dcdc9a5d8563" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="5d3ff10c-6620-425c-ade9-7e76410d4078" start_index="0" end="e75f1e9f-c1e8-4996-be7e-2b795fc1e7be" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a26191bb-ee1b-4593-9d63-114e3158bc33" start_index="0" end="e75f1e9f-c1e8-4996-be7e-2b795fc1e7be" end_index="1" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>