<Workspace Version="1.3.3.4651" X="451" Y="368" zoom="1" ScaleFactor="1" Name="RIE.GetPanelAndEquipmentFromCircuit" Description="Gets panel circuit is connected to, and Elements connected to the circuit." ID="e2889677-8d00-4809-8a16-1be74a227fbb" Category="RIE.Power">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="06deb1dc-49d3-4a15-90fd-14d84a0dc57e" type="PythonNodeModels.PythonNode" nickname="Python Script" x="292.5" y="42.2133333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script># @ Copyright - Designed by Andr√© Abotnes andre.abotnes@norconsult.com
import sys
#pyt_path = r"C:\Program Files (x86)\IronPython 2.7\DLLs"
#sys.path.append(pyt_path)
import clr

#clr.AddReference('IronPython.SQLite.dll')
pyt_path = r"C:\Program Files (x86)\IronPython 2.7\Lib"
sys.path.append(pyt_path)
#import sqlite3

# Import ToDSType(bool) extension method
clr.AddReference('RevitNodes')
import Revit
clr.ImportExtensions(Revit.GeometryConversion)
clr.ImportExtensions(Revit.Elements)

# Import DocumentManager and TransactionManager
clr.AddReference('RevitServices')
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

doc = DocumentManager.Instance.CurrentDBDocument
uidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument
app = DocumentManager.Instance.CurrentUIApplication.Application

# Import List ( ICollection(ElementId) = List[ElementId]() )
clr.AddReference('System')
from System.Collections.Generic import List

# Import Revit API + APIUI
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
from Autodesk.Revit.DB.Electrical import *

clr.AddReference('RevitAPIUI')
from Autodesk.Revit.UI import *

OUT = []

def tolist(obj):
	if isinstance(obj, list):
		return UnwrapElement(obj)
	else:
		return [UnwrapElement(obj)]

# Start Transaction
# TransactionManager.Instance.EnsureInTransaction(doc)

# End Transaction
# TransactionManager.Instance.TransactionTaskDone()

systems = tolist(IN[0])
panels = []
elements = []

for x in systems:
	panels.append(x.BaseEquipment)
	sublist = []
	try:
		elementset = x.Elements
		for x in elementset:
			sublist.append(x)
	except:
		if x.IsEmpty:
			sublist.append(x.Category.Name)
		else:
			sublist.append("Failed")
	elements.append(sublist)

#Assign your output to the OUT variable.
OUT = panels, elements</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="138b0bb3-d030-43dc-b400-71dcdb5d5e37" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="96.5" y="42.2133333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Circuits" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="23adf44f-762e-432c-868d-a9ffd81ef54a" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="706.5" y="9" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Panels" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="3a02d0db-437b-4bbf-a7ef-d3d9fd9fbe79" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="516.5" y="46.4266666666667" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="a[0];&#xA;a[1];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="29e03b30-fbfb-49c3-afa8-0354d955bb55" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="706.5" y="93" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Elements" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="06deb1dc-49d3-4a15-90fd-14d84a0dc57e" start_index="0" end="3a02d0db-437b-4bbf-a7ef-d3d9fd9fbe79" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="138b0bb3-d030-43dc-b400-71dcdb5d5e37" start_index="0" end="06deb1dc-49d3-4a15-90fd-14d84a0dc57e" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="3a02d0db-437b-4bbf-a7ef-d3d9fd9fbe79" start_index="0" end="23adf44f-762e-432c-868d-a9ffd81ef54a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="3a02d0db-437b-4bbf-a7ef-d3d9fd9fbe79" start_index="1" end="29e03b30-fbfb-49c3-afa8-0354d955bb55" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>